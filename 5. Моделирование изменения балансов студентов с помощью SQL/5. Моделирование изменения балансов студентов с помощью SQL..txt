-- Шаг 1
with first_payments as
    (select   user_id 
            , min(date(transaction_datetime)) as first_payment_date
    from skyeng_db.payments 
    where status_name = 'success'
    group by user_id
    ),

-- Шаг 2
all_dates as
    (select distinct date(class_start_datetime) dt
    from skyeng_db.classes 
    where date_trunc('year', class_start_datetime) = '2016-01-01'
    ),
    
-- Шаг 3
all_dates_by_user as
    (select user_id 
          , dt
    from first_payments f_p
        join all_dates a_d
        on f_p.first_payment_date <= a_d.dt
        ),
        
-- Шаг 4
payments_by_dates as
    (select  user_id
           , date(transaction_datetime) as payment_date
           , sum(classes) as transaction_balance_change
    from skyeng_db.payments
    where status_name = 'success'
    and date_trunc('year', transaction_datetime) = '2016-01-01'
    group by user_id, payment_date
    ),

--Шаг 5
payments_by_dates_cumsum as
    (select a_d_u.user_id
          , dt
          , coalesce(transaction_balance_change,0) as transaction_balance_change
          , sum(coalesce(transaction_balance_change,0)) over (partition by a_d_u.user_id order by dt) as transaction_balance_change_cs
     from all_dates_by_user a_d_u
     left join payments_by_dates p_d
     on dt = payment_date and a_d_u.user_id = p_d.user_id
     ),
     
--Шаг 6
classes_by_dates as
    (select user_id
          , date (class_start_datetime) as class_date
          , count(id_class)*-1 as classes
    from skyeng_db.classes a_c
    where class_status in ('success', 'failed_by_student')
    and class_type <> 'trial'
    and date_trunc('year', class_start_datetime) = '2016-01-01'
    group by user_id, class_date
    ),

--Шаг 7
classes_by_dates_dates_cumsum as
    (select  a_d_u.user_id 
           , dt 
           , coalesce(classes,0) as classes
           , sum(coalesce(classes,0)) over (partition by a_d_u.user_id order by dt) as classes_cs
    from all_dates_by_user a_d_u
    left join classes_by_dates c_d 
    on dt = class_date and a_d_u.user_id = c_d.user_id
    ),

--Шаг 8 
balances as     
    (select  p_cs.user_id
         ,   p_cs.dt
         ,   transaction_balance_change
         ,   transaction_balance_change_cs
         ,   classes
         ,   classes_cs
         ,   classes_cs + transaction_balance_change_cs as balance
    from payments_by_dates_cumsum p_cs
    join classes_by_dates_dates_cumsum c_cs 
    on p_cs.dt = c_cs.dt and p_cs.user_id = c_cs.user_id
    )
    
--Задание 1
--Выберите топ-1000 строк из CTE `balances` с сортировкой по `user_id` и `dt`. Посмотрите на изменения балансов студентов. Какие вопросы стоит задавать дата-инженерам и владельцам таблицы `payments`?
-- select *
-- from balances b
-- order by user_id, dt 
-- limit 1000 
    
--Шаг 9
select   b.dt
     ,   sum (transaction_balance_change) as sum_transaction_balance_change
     ,   sum (transaction_balance_change_cs) as sum_transaction_balance_change_cs
     ,   sum (classes) as sum_classes
     ,   sum (classes_cs) as sum_classes_cs
     ,   sum (balance) as sum_balance
from balances b
group by b.dt
order by b.dt

 
 
 